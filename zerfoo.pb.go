// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: pkg/format/zerfoo.proto

package format

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The data type of the tensor elements.
type Tensor_DataType int32

const (
	Tensor_FLOAT32  Tensor_DataType = 0
	Tensor_FLOAT16  Tensor_DataType = 1
	Tensor_BFLOAT16 Tensor_DataType = 2
	Tensor_FLOAT8   Tensor_DataType = 3
	Tensor_INT32    Tensor_DataType = 4
	Tensor_INT64    Tensor_DataType = 5
	Tensor_FLOAT64  Tensor_DataType = 6
)

// Enum value maps for Tensor_DataType.
var (
	Tensor_DataType_name = map[int32]string{
		0: "FLOAT32",
		1: "FLOAT16",
		2: "BFLOAT16",
		3: "FLOAT8",
		4: "INT32",
		5: "INT64",
		6: "FLOAT64",
	}
	Tensor_DataType_value = map[string]int32{
		"FLOAT32":  0,
		"FLOAT16":  1,
		"BFLOAT16": 2,
		"FLOAT8":   3,
		"INT32":    4,
		"INT64":    5,
		"FLOAT64":  6,
	}
)

func (x Tensor_DataType) Enum() *Tensor_DataType {
	p := new(Tensor_DataType)
	*p = x
	return p
}

func (x Tensor_DataType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Tensor_DataType) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_format_zerfoo_proto_enumTypes[0].Descriptor()
}

func (Tensor_DataType) Type() protoreflect.EnumType {
	return &file_pkg_format_zerfoo_proto_enumTypes[0]
}

func (x Tensor_DataType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Tensor_DataType.Descriptor instead.
func (Tensor_DataType) EnumDescriptor() ([]byte, []int) {
	return file_pkg_format_zerfoo_proto_rawDescGZIP(), []int{5, 0}
}

// Model is the top-level container for a serialized Zerfoo model.
type Model struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The computation graph defining the model's architecture.
	Graph *Graph `protobuf:"bytes,1,opt,name=graph,proto3" json:"graph,omitempty"`
	// Metadata about the model, such as its producer.
	Metadata      *Metadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Model) Reset() {
	*x = Model{}
	mi := &file_pkg_format_zerfoo_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Model) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Model) ProtoMessage() {}

func (x *Model) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_format_zerfoo_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Model.ProtoReflect.Descriptor instead.
func (*Model) Descriptor() ([]byte, []int) {
	return file_pkg_format_zerfoo_proto_rawDescGZIP(), []int{0}
}

func (x *Model) GetGraph() *Graph {
	if x != nil {
		return x.Graph
	}
	return nil
}

func (x *Model) GetMetadata() *Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Metadata stores information about the model's origin and versioning.
type Metadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the tool or framework that produced this model.
	ProducerName string `protobuf:"bytes,1,opt,name=producer_name,json=producerName,proto3" json:"producer_name,omitempty"`
	// The version of the producer.
	ProducerVersion string `protobuf:"bytes,2,opt,name=producer_version,json=producerVersion,proto3" json:"producer_version,omitempty"`
	// The version of the ZMF operator set this model conforms to.
	OpsetVersion  int64 `protobuf:"varint,3,opt,name=opset_version,json=opsetVersion,proto3" json:"opset_version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Metadata) Reset() {
	*x = Metadata{}
	mi := &file_pkg_format_zerfoo_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata) ProtoMessage() {}

func (x *Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_format_zerfoo_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata.ProtoReflect.Descriptor instead.
func (*Metadata) Descriptor() ([]byte, []int) {
	return file_pkg_format_zerfoo_proto_rawDescGZIP(), []int{1}
}

func (x *Metadata) GetProducerName() string {
	if x != nil {
		return x.ProducerName
	}
	return ""
}

func (x *Metadata) GetProducerVersion() string {
	if x != nil {
		return x.ProducerVersion
	}
	return ""
}

func (x *Metadata) GetOpsetVersion() int64 {
	if x != nil {
		return x.OpsetVersion
	}
	return 0
}

// Graph represents the computation graph of the model.
type Graph struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A map of all trainable parameters (weights, biases) in the model.
	// The key is a unique name for the parameter, e.g., "layers.0.attention.wq.weight".
	Parameters map[string]*Tensor `protobuf:"bytes,1,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// A list of all nodes (layers or operations) in the graph.
	// For sequential models, this list should be in execution order.
	Nodes []*Node `protobuf:"bytes,2,rep,name=nodes,proto3" json:"nodes,omitempty"`
	// A list describing the input tensors to the graph.
	Inputs []*ValueInfo `protobuf:"bytes,3,rep,name=inputs,proto3" json:"inputs,omitempty"`
	// A list describing the output tensors of the graph.
	Outputs       []*ValueInfo `protobuf:"bytes,4,rep,name=outputs,proto3" json:"outputs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Graph) Reset() {
	*x = Graph{}
	mi := &file_pkg_format_zerfoo_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Graph) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Graph) ProtoMessage() {}

func (x *Graph) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_format_zerfoo_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Graph.ProtoReflect.Descriptor instead.
func (*Graph) Descriptor() ([]byte, []int) {
	return file_pkg_format_zerfoo_proto_rawDescGZIP(), []int{2}
}

func (x *Graph) GetParameters() map[string]*Tensor {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *Graph) GetNodes() []*Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *Graph) GetInputs() []*ValueInfo {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *Graph) GetOutputs() []*ValueInfo {
	if x != nil {
		return x.Outputs
	}
	return nil
}

// ValueInfo describes a tensor, including its name, type, and shape.
type ValueInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the tensor.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The data type of the tensor.
	Dtype Tensor_DataType `protobuf:"varint,2,opt,name=dtype,proto3,enum=format.Tensor_DataType" json:"dtype,omitempty"`
	// The shape of the tensor. A value of -1 can be used for dynamic dimensions.
	Shape         []int64 `protobuf:"varint,3,rep,packed,name=shape,proto3" json:"shape,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValueInfo) Reset() {
	*x = ValueInfo{}
	mi := &file_pkg_format_zerfoo_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValueInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValueInfo) ProtoMessage() {}

func (x *ValueInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_format_zerfoo_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValueInfo.ProtoReflect.Descriptor instead.
func (*ValueInfo) Descriptor() ([]byte, []int) {
	return file_pkg_format_zerfoo_proto_rawDescGZIP(), []int{3}
}

func (x *ValueInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ValueInfo) GetDtype() Tensor_DataType {
	if x != nil {
		return x.Dtype
	}
	return Tensor_FLOAT32
}

func (x *ValueInfo) GetShape() []int64 {
	if x != nil {
		return x.Shape
	}
	return nil
}

// Node represents a single layer or operation in the computation graph.
type Node struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A unique name for this node, e.g., "transformer_block_0".
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The type of operation this node performs, e.g., "RMSNorm", "GlobalAttention".
	// This must map to a registered constructor in the importer.
	OpType string `protobuf:"bytes,2,opt,name=op_type,json=opType,proto3" json:"op_type,omitempty"`
	// A list of names of the tensors that are inputs to this node.
	// These can be names of parameters or outputs of other nodes.
	Inputs []string `protobuf:"bytes,3,rep,name=inputs,proto3" json:"inputs,omitempty"`
	// A list of names for the output tensors of this node.
	Outputs []string `protobuf:"bytes,4,rep,name=outputs,proto3" json:"outputs,omitempty"`
	// A map of attributes for this node, for values that are not tensors.
	// e.g., "epsilon" for RMSNorm, "hidden_dim" for FFN.
	Attributes    map[string]*Attribute `protobuf:"bytes,5,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Node) Reset() {
	*x = Node{}
	mi := &file_pkg_format_zerfoo_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_format_zerfoo_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_pkg_format_zerfoo_proto_rawDescGZIP(), []int{4}
}

func (x *Node) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Node) GetOpType() string {
	if x != nil {
		return x.OpType
	}
	return ""
}

func (x *Node) GetInputs() []string {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *Node) GetOutputs() []string {
	if x != nil {
		return x.Outputs
	}
	return nil
}

func (x *Node) GetAttributes() map[string]*Attribute {
	if x != nil {
		return x.Attributes
	}
	return nil
}

// Tensor represents a multi-dimensional array of data (e.g., a weight matrix).
type Tensor struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Dtype Tensor_DataType        `protobuf:"varint,1,opt,name=dtype,proto3,enum=format.Tensor_DataType" json:"dtype,omitempty"`
	// The shape (dimensions) of the tensor.
	Shape []int64 `protobuf:"varint,2,rep,packed,name=shape,proto3" json:"shape,omitempty"`
	// The raw tensor data, stored as bytes.
	Data          []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Tensor) Reset() {
	*x = Tensor{}
	mi := &file_pkg_format_zerfoo_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Tensor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tensor) ProtoMessage() {}

func (x *Tensor) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_format_zerfoo_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tensor.ProtoReflect.Descriptor instead.
func (*Tensor) Descriptor() ([]byte, []int) {
	return file_pkg_format_zerfoo_proto_rawDescGZIP(), []int{5}
}

func (x *Tensor) GetDtype() Tensor_DataType {
	if x != nil {
		return x.Dtype
	}
	return Tensor_FLOAT32
}

func (x *Tensor) GetShape() []int64 {
	if x != nil {
		return x.Shape
	}
	return nil
}

func (x *Tensor) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// Attribute represents a named, non-tensor parameter for a node.
type Attribute struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Value:
	//
	//	*Attribute_F
	//	*Attribute_I
	//	*Attribute_S
	//	*Attribute_Floats
	//	*Attribute_Ints
	//	*Attribute_Strings
	Value         isAttribute_Value `protobuf_oneof:"value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Attribute) Reset() {
	*x = Attribute{}
	mi := &file_pkg_format_zerfoo_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Attribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attribute) ProtoMessage() {}

func (x *Attribute) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_format_zerfoo_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attribute.ProtoReflect.Descriptor instead.
func (*Attribute) Descriptor() ([]byte, []int) {
	return file_pkg_format_zerfoo_proto_rawDescGZIP(), []int{6}
}

func (x *Attribute) GetValue() isAttribute_Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *Attribute) GetF() float32 {
	if x != nil {
		if x, ok := x.Value.(*Attribute_F); ok {
			return x.F
		}
	}
	return 0
}

func (x *Attribute) GetI() int64 {
	if x != nil {
		if x, ok := x.Value.(*Attribute_I); ok {
			return x.I
		}
	}
	return 0
}

func (x *Attribute) GetS() string {
	if x != nil {
		if x, ok := x.Value.(*Attribute_S); ok {
			return x.S
		}
	}
	return ""
}

func (x *Attribute) GetFloats() *Floats {
	if x != nil {
		if x, ok := x.Value.(*Attribute_Floats); ok {
			return x.Floats
		}
	}
	return nil
}

func (x *Attribute) GetInts() *Ints {
	if x != nil {
		if x, ok := x.Value.(*Attribute_Ints); ok {
			return x.Ints
		}
	}
	return nil
}

func (x *Attribute) GetStrings() *Strings {
	if x != nil {
		if x, ok := x.Value.(*Attribute_Strings); ok {
			return x.Strings
		}
	}
	return nil
}

type isAttribute_Value interface {
	isAttribute_Value()
}

type Attribute_F struct {
	F float32 `protobuf:"fixed32,1,opt,name=f,proto3,oneof"`
}

type Attribute_I struct {
	I int64 `protobuf:"varint,2,opt,name=i,proto3,oneof"`
}

type Attribute_S struct {
	S string `protobuf:"bytes,3,opt,name=s,proto3,oneof"`
}

type Attribute_Floats struct {
	Floats *Floats `protobuf:"bytes,4,opt,name=floats,proto3,oneof"`
}

type Attribute_Ints struct {
	Ints *Ints `protobuf:"bytes,5,opt,name=ints,proto3,oneof"`
}

type Attribute_Strings struct {
	Strings *Strings `protobuf:"bytes,6,opt,name=strings,proto3,oneof"`
}

func (*Attribute_F) isAttribute_Value() {}

func (*Attribute_I) isAttribute_Value() {}

func (*Attribute_S) isAttribute_Value() {}

func (*Attribute_Floats) isAttribute_Value() {}

func (*Attribute_Ints) isAttribute_Value() {}

func (*Attribute_Strings) isAttribute_Value() {}

// Wrapper messages for repeated primitive types in attributes.
type Floats struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Val           []float32              `protobuf:"fixed32,1,rep,packed,name=val,proto3" json:"val,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Floats) Reset() {
	*x = Floats{}
	mi := &file_pkg_format_zerfoo_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Floats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Floats) ProtoMessage() {}

func (x *Floats) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_format_zerfoo_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Floats.ProtoReflect.Descriptor instead.
func (*Floats) Descriptor() ([]byte, []int) {
	return file_pkg_format_zerfoo_proto_rawDescGZIP(), []int{7}
}

func (x *Floats) GetVal() []float32 {
	if x != nil {
		return x.Val
	}
	return nil
}

type Ints struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Val           []int64                `protobuf:"varint,1,rep,packed,name=val,proto3" json:"val,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Ints) Reset() {
	*x = Ints{}
	mi := &file_pkg_format_zerfoo_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ints) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ints) ProtoMessage() {}

func (x *Ints) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_format_zerfoo_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ints.ProtoReflect.Descriptor instead.
func (*Ints) Descriptor() ([]byte, []int) {
	return file_pkg_format_zerfoo_proto_rawDescGZIP(), []int{8}
}

func (x *Ints) GetVal() []int64 {
	if x != nil {
		return x.Val
	}
	return nil
}

type Strings struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Val           []string               `protobuf:"bytes,1,rep,name=val,proto3" json:"val,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Strings) Reset() {
	*x = Strings{}
	mi := &file_pkg_format_zerfoo_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Strings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Strings) ProtoMessage() {}

func (x *Strings) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_format_zerfoo_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Strings.ProtoReflect.Descriptor instead.
func (*Strings) Descriptor() ([]byte, []int) {
	return file_pkg_format_zerfoo_proto_rawDescGZIP(), []int{9}
}

func (x *Strings) GetVal() []string {
	if x != nil {
		return x.Val
	}
	return nil
}

var File_pkg_format_zerfoo_proto protoreflect.FileDescriptor

const file_pkg_format_zerfoo_proto_rawDesc = "" +
	"\n" +
	"\x17pkg/format/zerfoo.proto\x12\x06format\"Z\n" +
	"\x05Model\x12#\n" +
	"\x05graph\x18\x01 \x01(\v2\r.format.GraphR\x05graph\x12,\n" +
	"\bmetadata\x18\x02 \x01(\v2\x10.format.MetadataR\bmetadata\"\x7f\n" +
	"\bMetadata\x12#\n" +
	"\rproducer_name\x18\x01 \x01(\tR\fproducerName\x12)\n" +
	"\x10producer_version\x18\x02 \x01(\tR\x0fproducerVersion\x12#\n" +
	"\ropset_version\x18\x03 \x01(\x03R\fopsetVersion\"\x91\x02\n" +
	"\x05Graph\x12=\n" +
	"\n" +
	"parameters\x18\x01 \x03(\v2\x1d.format.Graph.ParametersEntryR\n" +
	"parameters\x12\"\n" +
	"\x05nodes\x18\x02 \x03(\v2\f.format.NodeR\x05nodes\x12)\n" +
	"\x06inputs\x18\x03 \x03(\v2\x11.format.ValueInfoR\x06inputs\x12+\n" +
	"\aoutputs\x18\x04 \x03(\v2\x11.format.ValueInfoR\aoutputs\x1aM\n" +
	"\x0fParametersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12$\n" +
	"\x05value\x18\x02 \x01(\v2\x0e.format.TensorR\x05value:\x028\x01\"d\n" +
	"\tValueInfo\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12-\n" +
	"\x05dtype\x18\x02 \x01(\x0e2\x17.format.Tensor.DataTypeR\x05dtype\x12\x14\n" +
	"\x05shape\x18\x03 \x03(\x03R\x05shape\"\xf5\x01\n" +
	"\x04Node\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x17\n" +
	"\aop_type\x18\x02 \x01(\tR\x06opType\x12\x16\n" +
	"\x06inputs\x18\x03 \x03(\tR\x06inputs\x12\x18\n" +
	"\aoutputs\x18\x04 \x03(\tR\aoutputs\x12<\n" +
	"\n" +
	"attributes\x18\x05 \x03(\v2\x1c.format.Node.AttributesEntryR\n" +
	"attributes\x1aP\n" +
	"\x0fAttributesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12'\n" +
	"\x05value\x18\x02 \x01(\v2\x11.format.AttributeR\x05value:\x028\x01\"\xc4\x01\n" +
	"\x06Tensor\x12-\n" +
	"\x05dtype\x18\x01 \x01(\x0e2\x17.format.Tensor.DataTypeR\x05dtype\x12\x14\n" +
	"\x05shape\x18\x02 \x03(\x03R\x05shape\x12\x12\n" +
	"\x04data\x18\x03 \x01(\fR\x04data\"a\n" +
	"\bDataType\x12\v\n" +
	"\aFLOAT32\x10\x00\x12\v\n" +
	"\aFLOAT16\x10\x01\x12\f\n" +
	"\bBFLOAT16\x10\x02\x12\n" +
	"\n" +
	"\x06FLOAT8\x10\x03\x12\t\n" +
	"\x05INT32\x10\x04\x12\t\n" +
	"\x05INT64\x10\x05\x12\v\n" +
	"\aFLOAT64\x10\x06\"\xbf\x01\n" +
	"\tAttribute\x12\x0e\n" +
	"\x01f\x18\x01 \x01(\x02H\x00R\x01f\x12\x0e\n" +
	"\x01i\x18\x02 \x01(\x03H\x00R\x01i\x12\x0e\n" +
	"\x01s\x18\x03 \x01(\tH\x00R\x01s\x12(\n" +
	"\x06floats\x18\x04 \x01(\v2\x0e.format.FloatsH\x00R\x06floats\x12\"\n" +
	"\x04ints\x18\x05 \x01(\v2\f.format.IntsH\x00R\x04ints\x12+\n" +
	"\astrings\x18\x06 \x01(\v2\x0f.format.StringsH\x00R\astringsB\a\n" +
	"\x05value\"\x1a\n" +
	"\x06Floats\x12\x10\n" +
	"\x03val\x18\x01 \x03(\x02R\x03val\"\x18\n" +
	"\x04Ints\x12\x10\n" +
	"\x03val\x18\x01 \x03(\x03R\x03val\"\x1b\n" +
	"\aStrings\x12\x10\n" +
	"\x03val\x18\x01 \x03(\tR\x03valB%Z#github.com/zerfoo/zerfoo/pkg/formatb\x06proto3"

var (
	file_pkg_format_zerfoo_proto_rawDescOnce sync.Once
	file_pkg_format_zerfoo_proto_rawDescData []byte
)

func file_pkg_format_zerfoo_proto_rawDescGZIP() []byte {
	file_pkg_format_zerfoo_proto_rawDescOnce.Do(func() {
		file_pkg_format_zerfoo_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_format_zerfoo_proto_rawDesc), len(file_pkg_format_zerfoo_proto_rawDesc)))
	})
	return file_pkg_format_zerfoo_proto_rawDescData
}

var file_pkg_format_zerfoo_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_pkg_format_zerfoo_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_pkg_format_zerfoo_proto_goTypes = []any{
	(Tensor_DataType)(0), // 0: format.Tensor.DataType
	(*Model)(nil),        // 1: format.Model
	(*Metadata)(nil),     // 2: format.Metadata
	(*Graph)(nil),        // 3: format.Graph
	(*ValueInfo)(nil),    // 4: format.ValueInfo
	(*Node)(nil),         // 5: format.Node
	(*Tensor)(nil),       // 6: format.Tensor
	(*Attribute)(nil),    // 7: format.Attribute
	(*Floats)(nil),       // 8: format.Floats
	(*Ints)(nil),         // 9: format.Ints
	(*Strings)(nil),      // 10: format.Strings
	nil,                  // 11: format.Graph.ParametersEntry
	nil,                  // 12: format.Node.AttributesEntry
}
var file_pkg_format_zerfoo_proto_depIdxs = []int32{
	3,  // 0: format.Model.graph:type_name -> format.Graph
	2,  // 1: format.Model.metadata:type_name -> format.Metadata
	11, // 2: format.Graph.parameters:type_name -> format.Graph.ParametersEntry
	5,  // 3: format.Graph.nodes:type_name -> format.Node
	4,  // 4: format.Graph.inputs:type_name -> format.ValueInfo
	4,  // 5: format.Graph.outputs:type_name -> format.ValueInfo
	0,  // 6: format.ValueInfo.dtype:type_name -> format.Tensor.DataType
	12, // 7: format.Node.attributes:type_name -> format.Node.AttributesEntry
	0,  // 8: format.Tensor.dtype:type_name -> format.Tensor.DataType
	8,  // 9: format.Attribute.floats:type_name -> format.Floats
	9,  // 10: format.Attribute.ints:type_name -> format.Ints
	10, // 11: format.Attribute.strings:type_name -> format.Strings
	6,  // 12: format.Graph.ParametersEntry.value:type_name -> format.Tensor
	7,  // 13: format.Node.AttributesEntry.value:type_name -> format.Attribute
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_pkg_format_zerfoo_proto_init() }
func file_pkg_format_zerfoo_proto_init() {
	if File_pkg_format_zerfoo_proto != nil {
		return
	}
	file_pkg_format_zerfoo_proto_msgTypes[6].OneofWrappers = []any{
		(*Attribute_F)(nil),
		(*Attribute_I)(nil),
		(*Attribute_S)(nil),
		(*Attribute_Floats)(nil),
		(*Attribute_Ints)(nil),
		(*Attribute_Strings)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_format_zerfoo_proto_rawDesc), len(file_pkg_format_zerfoo_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_format_zerfoo_proto_goTypes,
		DependencyIndexes: file_pkg_format_zerfoo_proto_depIdxs,
		EnumInfos:         file_pkg_format_zerfoo_proto_enumTypes,
		MessageInfos:      file_pkg_format_zerfoo_proto_msgTypes,
	}.Build()
	File_pkg_format_zerfoo_proto = out.File
	file_pkg_format_zerfoo_proto_goTypes = nil
	file_pkg_format_zerfoo_proto_depIdxs = nil
}
